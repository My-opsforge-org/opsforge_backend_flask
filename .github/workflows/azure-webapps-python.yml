name: Deploy Flask app to Azure VM

on:
  push:
    branches:
      - master
  workflow_dispatch:


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Drop all tables in the database
        run: |
          python init_db.py
        env:
          FLASK_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Delete migrations directory
        run: |
          rm -rf migrations

      - name: Initialize DB migrations
        run: |
          export FLASK_APP=manage.py && flask db init || true
        env:
          FLASK_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          

      - name: Generate migration
        run: |
          export FLASK_APP=manage.py && flask db migrate -m "Auto migration" || true
        env:
          FLASK_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Apply DB migrations
        run: |
          export FLASK_APP=manage.py && flask db upgrade
        env:
          FLASK_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

          
      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Clean app directory on VM
        run: |
          sshpass -p ${{ secrets.VM_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_PUBLIC_IP }} "\
            rm -rf /home/${{ secrets.VM_USERNAME }}/app && \
            mkdir -p /home/${{ secrets.VM_USERNAME }}/app \
          "
      - name: Copy code to VM
        run: |
          sshpass -p ${{ secrets.VM_PASSWORD }} scp -o StrictHostKeyChecking=no -r . ${{ secrets.VM_USERNAME }}@${{ secrets.VM_PUBLIC_IP }}:/home/${{ secrets.VM_USERNAME }}/app
      - name: Install dependencies on VM
        run: |
          sshpass -p ${{ secrets.VM_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_PUBLIC_IP }} "\
            cd /home/${{ secrets.VM_USERNAME }}/app && \
            sudo apt update && sudo apt install python3 python3-pip python3-venv -y && \
            python3 -m venv venv && \
            source venv/bin/activate && \
            pip install --upgrade pip && \
            pip install -r requirements.txt \
          "
      - name: Set Environment Variables
        run: |
          sshpass -p ${{ secrets.VM_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_PUBLIC_IP }} "cd /home/${{ secrets.VM_USERNAME }}/app && echo 'export DATABASE_URL=\"postgresql://postgres:admin@gotrip-postgres.postgres.database.azure.com:5432/gotripdb\"' > .env && echo 'export JWT_SECRET_KEY=\"aftabs_jwt_secret_key\"' >> .env && echo 'export SECRET_KEY=\"aftabs_secret_key\"' >> .env && echo 'export GOOGLE_PLACES_API_KEY=\"AIzaSyDMOv3ucij8PQPtVLPvFZ88arhaRfl0lEA\"' >> .env && echo '=== Environment file created ===' && cat .env"


      - name: Deploy and Start App
        run: |
          sshpass -p ${{ secrets.VM_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_PUBLIC_IP }} "\
            cd /home/${{ secrets.VM_USERNAME }}/app && \
            source venv/bin/activate && \
            source .env && \
            setsid nohup gunicorn -w 4 -b 0.0.0.0:8000 manage:app > gunicorn.log 2>&1 < /dev/null & \
            echo 'Gunicorn started with PID:' \$! && exit"
