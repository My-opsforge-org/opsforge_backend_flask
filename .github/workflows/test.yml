# name: Test

# on:
#   push:
#     branches: [ main, develop ]
#   pull_request:
#     branches: [ main, develop ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
    
#     services:
#       postgres:
#         image: postgres:13
#         env:
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: test_db
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 5432:5432

#     steps:
#     - uses: actions/checkout@v3
    
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.9'
    
#     - name: Cache pip dependencies
#       uses: actions/cache@v3
#       with:
#         path: ~/.cache/pip
#         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
#         restore-keys: |
#           ${{ runner.os }}-pip-
    
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install -r requirements_test.txt
    
#     - name: Set environment variables
#       run: |
#         echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
#         echo "SECRET_KEY=test-secret-key" >> $GITHUB_ENV
#         echo "JWT_SECRET_KEY=test-jwt-secret-key" >> $GITHUB_ENV
#         echo "FLASK_ENV=testing" >> $GITHUB_ENV
    
#     - name: Run tests
#       run: |
#         pytest --cov=app --cov=auth --cov=community --cov=explore --cov-report=xml --cov-report=html
    
#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v3
#       with:
#         file: ./coverage.xml
#         flags: unittests
#         name: codecov-umbrella
#         fail_ci_if_error: true
    
#     - name: Upload coverage report
#       uses: actions/upload-artifact@v3
#       with:
#         name: coverage-report
#         path: htmlcov/
    
#     - name: Run security scan
#       run: |
#         pip install bandit
#         bandit -r . -f json -o bandit-report.json || true
    
#     - name: Upload security report
#       uses: actions/upload-artifact@v3
#       with:
#         name: security-report
#         path: bandit-report.json 